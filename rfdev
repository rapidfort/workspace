#!/bin/bash

session_name=$(basename "$0")

quit() {
    if tmux has-session -t "${session_name}" 2>/dev/null; then
        tmux kill-session -t "${session_name}"
    else
        echo no tmux session "${session_name}" found.
    fi
}

tmux_select_window() {
    echo xxx | tee /tmp/tmux-windows.log
    local windows=$(tmux list-windows -a -F "#S:#I:#W" | sed 's/:/ /g') # List all tmux windows
    echo "$windows" | tee /tmp/tmux-windows.log
    local window=$(echo "$windows" | fzf --height=40% --reverse | tee /tmp/fzf-output.log | awk '{print $1 ":" $2}') # Use fzf to select a window

    if [[ -n $window ]]; then
        tmux select-window -t $window # Switch to the selected window
    else
        echo "No window selected or fzf failed" | tee /tmp/fzf-error.log
    fi
}

export -f tmux_select_window

config() {

cat<<'CONFIG' > /tmp/"${session_name}".tmux.conf
set -g mouse on
unbind C-b
set-option -g prefix C-o
bind-key C-o send-prefix
bind-key / command-prompt -p 'Search for window:' 'choose-tree -w'
bind-key z run-shell "tmux list-windows -a -F '#S:#I' | fzf --height=40% --reverse | xargs tmux select-window -t"

bind-key A command-prompt -I "#W" "rename-window '%%'"
bind-key o last-pane
set -g status-interval 10
set -g status-right "L: #(cut -d ' ' -f 1-3 /proc/loadavg) | #([ -f /root/rapidfort/RF_SAAS ] && echo S || echo O) | %a %h-%d %H:%M"
CONFIG

}

create_windows() {
    local windows=("build" "build2" "test1" "log1" "test2")
    local repos=("." "." "." "." ".")
    # windows=("agg" "bac" "com" "doc" "facc" "fupl" "fro" "fun" "iso" "k8s" "pac" "cli" "plat" "rfp" "rfv" "run" "vul")
    # repos=("aggregator" "backend" "common" "documentation" "file_access" "fileupload" "frontrow" "functional-tests" \
    #        "iso-master" "k8s-rf-monitor" "package-analyzer" "rapidfort" "rapidfort-platform" "rfpubsub" "rfvdb" "runner" "vulns-db")

    for i in "${!windows[@]}"; do
        if [ $i = 0 ]; then
            tmux rename-window -t "${session_name}" "${windows[i]}"
            tmux send-keys -t "${session_name}" "cd /root/rapidfort/${repos[i]}" C-m
        else
            tmux new-window -t "${session_name}" -n "${windows[i]}"
            tmux send-keys -t "${session_name}":$i "cd /root/rapidfort/${repos[i]}" C-m
        fi
    done
}

start() {

    if tmux has-session -t "${session_name}" 2>/dev/null; then
        tmux attach-session -t "${session_name}"
    else
        config
        tmux -f /tmp/"${session_name}".tmux.conf new-session -d -s "${session_name}"
        create_windows
        tmux attach-session -t "${session_name}"
    fi
}

case $1 in
  quit|q|exit|x)
    echo "Exiting the "${session_name}" ..."
    quit
    exit 0
    ;;
  *)
    start
    ;;
esac

